<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
  <mapper namespace="com.agos.agw.dao.IUserDAO">
  	<resultMap type="com.agos.agw.model.UserVO" id="userResult">
  		<result property="usr_idx" column="usr_idx" />
  		<result property="usr_id" column="usr_id" />
  		<result property="usr_pw" column="usr_pw" />
  		<result property="usr_nm" column="usr_nm" />
  		<result property="usr_gender" column="usr_gender" />
  		<result property="usr_email" column="usr_email" />
  		<result property="usr_crea_date" column="usr_crea_date" />
  		<result property="usr_position" column="usr_position" />
  		<result property="usr_right" column="usr_right" />
  		<result property="usr_appr" column="usr_appr" />
  		<result property="usr_birth" column="usr_birth" />
  		<result property="usr_phone" column="usr_phone" />
  		<result property="usr_address" column="usr_address" />
  	</resultMap>
  	
	<resultMap type="com.agos.agw.model.ExcelVO" id="ExcelResult">
		<result property="usr_id" column="usr_id" />
		<result property="usr_nm" column="usr_nm" />
		<result property="usr_email" column="usr_email" />
		<result property="usr_position" column="usr_position" />
		<result property="usr_phone" column="usr_phone" />
		<result property="usr_address" column="usr_address" />
  	</resultMap>
  	
  	<!-- 전체 사용자 조회 -->
  	<select id="listAllUser" resultMap="userResult">
  		SELECT
  			usr_idx, usr_id, usr_pw, usr_nm, usr_gender, usr_email, usr_crea_date, usr_position,
			case usr_right when 0 then "관리자" else (case usr_right when 1 then "일반" end) end as usr_right,
        	usr_appr
        FROM user_regist
        WHERE usr_appr = 1
  	</select>
  	
  	<!-- 총 사용자 수 계산 -->
  	<select id="countUser" resultType="int" >
  		SELECT COUNT(*) FROM user_regist
  	</select>
  	
  	<!-- 페이징 -->
  	<select id="listUserPaging" parameterType="hashMap" resultMap="userResult">
  		SELECT 
  			usr_idx, usr_id, usr_pw, usr_nm, usr_gender, usr_email, usr_crea_date, usr_position,
			case usr_right when 0 then "관리자" else (case usr_right when 1 then "일반" end) end as usr_right,
        	usr_appr
	  		FROM (
				SELECT @ROWNUM:=@ROWNUM +1 AS RN, Q.* 
					FROM (
							SELECT * FROM user_regist Q
							  WHERE usr_appr = 1
							)Q, (SELECT @ROWNUM:=0)A
							)B
					WHERE RN BETWEEN #{start} AND #{end}
  	</select>
  	
  	<!-- 사용자 검색 -->
  	<select id="userSearch" parameterType="hashmap" resultMap="userResult">	
  		SELECT
  			usr_idx, usr_id, usr_pw, usr_nm, usr_gender, usr_email, usr_crea_date, usr_position,
			case usr_right when 0 then "관리자" else (case usr_right when 1 then "일반" end) end as usr_right,
        	usr_appr
        FROM `user_regist`
        WHERE 
        <choose>
        	<when test="searchType.equals('search_id')">
        		usr_id LIKE CONCAT('%', #{searchKeyword}, '%')
        	</when>
        	<when test="searchType.equals('search_name')">
        		usr_nm LIKE CONCAT('%', #{searchKeyword}, '%')
        	</when>
        	<when test="searchType.equals('search_id_name')">
        		usr_id LIKE CONCAT('%', #{searchKeyword}, '%')
        		OR usr_nm LIKE CONCAT('%', #{searchKeyword}, '%')
        	</when>
        </choose>
       	AND usr_appr=1
  	</select>
  	
  	<!-- 검색 후 페이징 유지 -->
  	<select id="userSearchPaging" parameterType="hashMap" resultMap="userResult">
  	SELECT 
  			usr_idx, usr_id, usr_pw, usr_nm, usr_gender, usr_email, usr_crea_date, usr_position,
			case usr_right when 0 then "관리자" else (case usr_right when 1 then "일반" end) end as usr_right,
        	usr_appr
		FROM (
			SELECT @ROWNUM:=@ROWNUM +1 AS RN, Q.* 
				FROM (
						SELECT * FROM `user_regist` Q
							WHERE
							<choose>
					        	<when test="searchType.equals('search_id')">
					        		usr_id LIKE CONCAT('%', #{searchKeyword}, '%')
					        	</when>
					        	<when test="searchType.equals('search_name')">
					        		usr_nm LIKE CONCAT('%', #{searchKeyword}, '%')
					        	</when>
					        	<when test="searchType.equals('search_id_name')">
					        		usr_id LIKE CONCAT('%', #{searchKeyword}, '%')
					        		OR usr_nm LIKE CONCAT('%', #{searchKeyword}, '%')
					        	</when>
					        </choose>
        					AND usr_appr=1
						)Q, (SELECT @ROWNUM:=0)A
						)B
				WHERE RN BETWEEN #{start} AND #{end}
				
  	</select>
  	
  	<!-- 사용자 수정 -->
  	<update id="updateUser" parameterType="com.agos.agw.model.UserVO">
  		UPDATE user_regist SET usr_position =#{usr_position}, usr_right =#{usr_right}
  			WHERE usr_idx = #{usr_idx}
  	</update>
  	
  	<!-- 사용자 삭제 -->
  	<delete id="deleteUser" parameterType="string">
  		DELETE FROM user_regist WHERE usr_idx = #{usr_idx}
  	</delete>
  	
  	<!-- 승인 여부 값이 0인 승인 대기자만 조회 -->
  	<select id="listRequestUser" resultMap="userResult">
  		SELECT 
  			usr_idx, usr_id, usr_pw, usr_nm, usr_gender, usr_email, usr_crea_date, usr_position,
			case usr_right when 0 then "관리자" else (case usr_right when 1 then "일반" end) end as usr_right,
        	usr_appr, usr_birth, usr_phone, usr_address
        FROM user_regist WHERE usr_appr= 0
  	</select>
  	
  	<!-- 승인 여부 값이 0인 승인 대기자만 조회 + 페이징 -->
  	<select id="listRequestPaging" parameterType="hashMap"  resultMap="userResult">
  		SELECT 
  			usr_idx, usr_id, usr_pw, usr_nm, usr_gender, usr_email, usr_crea_date, usr_position,
			case usr_right when 0 then "관리자" else (case usr_right when 1 then "일반" end) end as usr_right,
        	usr_appr, usr_birth, usr_phone, usr_address
  		FROM user_regist
  		WHERE usr_appr = 0
  	</select>
  	
  	<!-- 사용자 승인 : 승인 여부 값을 0에서 1로 업데이트 + 데이터 업데이트 -->
  	<update id="approveUser" parameterType="com.agos.agw.model.UserVO">
  		UPDATE user_regist SET usr_position =#{usr_position}, usr_right =#{usr_right}, usr_appr = 1
  			WHERE usr_idx = #{usr_idx}
  	</update>
  	
  	<!-- 엑셀 리스트 -->
  	<select id="excelList" parameterType="hashMap" resultMap="ExcelResult">
  		SELECT
  			usr_id, usr_nm, usr_position, usr_email, usr_phone, usr_address
  		FROM user_regist
  		WHERE
		<choose>
        	<when test="searchType.equals('search_id')">
        		usr_id LIKE CONCAT('%', #{searchKeyword}, '%')
        	</when>
        	<when test="searchType.equals('search_name')">
        		usr_nm LIKE CONCAT('%', #{searchKeyword}, '%')
        	</when>
        	<when test="searchType.equals('search_id_name')">
        		usr_id LIKE CONCAT('%', #{searchKeyword}, '%')
        		OR usr_nm LIKE CONCAT('%', #{searchKeyword}, '%')
        	</when>
        </choose>
         AND usr_appr=1
  	</select>
  	
  	<!-- 사용자 상세 정보  -->
  	<select id="userDetail" parameterType="int" resultMap="userResult">
  		SELECT * FROM user_regist WHERE usr_idx = #{usr_idx}
  	</select>
  </mapper>